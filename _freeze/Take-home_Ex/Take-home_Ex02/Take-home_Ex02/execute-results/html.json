{
  "hash": "dba5385ce286946f31f20e7650d48bfa",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 2: Discovering impacts of COVID-19 on Thailand tourism economy at province level using spatial and spatio-temporal statistics\"\nauthor: \"Nguyen Bao Thu Phuong\"\ndate: \"13 October 2024\" \ndate-modified: \"last-modified\"\nexecute:\n  eval: true\n  echo: true\n  message: false\n  freeze: true\n---\n\n\n# Overview\n\n## Setting the scene\n\nTourism is one of Thailand's largest industries, contributing to around 20% to the gross domestic product (GDP). In 2019, it generated 90 billion USD, but due to COVID-19, this revenue has dropped to 24 billion in 2020.\n\nUsing the statistics obtained from [The Official Ministry of Tourism and Sports Statistics of Thailand](https://www.mots.go.th/news/category/411), we can see that the tourism revenue has gradually recovery since September 2021. It is notable that the tourism economy in Thailand is largely concentrated in certain provinces.\n\n## Objectives\n\nThis analysis aims to deliver 2 objectives:\n\n-   Examine if the key indicators of Thailand's tourism economy are independent from space and space and time using appropriate statistical testing.\n\n-   If the key indicators are spatial and spatio-temporal dependent, then detection of clusters and outliers, and emerging hot spots/cold spots will be carried out to further understand the association.\n\n## The Data\n\n2 datasets will be used for the purpose of this analysis:\n\n-   [Thailand Domestic Tourism Statistics](https://www.kaggle.com/datasets/thaweewatboy/thailand-domestic-tourism-statistics) at Kaggle. We will use the updated **version 2** of the data set.\n\n-   [Thailand - Subnational Administrative Boundaries](https://data.humdata.org/dataset/cod-ab-tha?) at HDX. The boundary dataset at province level (level 1) will be used.\n\n# Set up R environment\n\n## Import R packages\n\nThe below code chunk uses `p_load()` of pacman package to install and load relevant packages into R environment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, sfdep, tmap, tidyverse, corrplot)\n```\n:::\n\n\n-   [tmap](https://cran.r-project.org/web/packages/tmap/) for visualizing geospatial data\n\n-   [sf](https://r-spatial.github.io/sf/) for handling geospatial data\n\n-   [tidyverse](https://www.tidyverse.org/) for handling aspatial data\n\n-   [sfdep](https://sfdep.josiahparry.com/) facilitate spatial dependence analysis with and sf and tidyverse friendly interface\n\n-   [corrplot](https://cran.r-project.org/web/packages/corrplot/vignettes/corrplot-intro.html) for correlation matrix visualization\n\n# Import Geospatial and Aspatial Data\n\n## Import Thailand province boundaries\n\nThe below code chunk uses st_read() to imports the administrative boundaries at province level of Thailand to `thailand_raw` sf dataframe.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthailand_raw = st_read(dsn = \"data/rawdata\",layer = \"tha_admbnda_adm1_rtsd_20220121\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `C:\\thuphuong1110\\ISSS626-GAA\\Take-home_Ex\\Take-home_Ex02\\data\\rawdata' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\nNext we cast the dataframe from MULTIPOLYGON to POLYGON geometry type using the below code chunk to facilitate future spatial neighbor and spatial weights calculation. For provinces with multiple polygons (small islands), only the polygon with the largest area will be kept.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthailand <- thailand_raw |>\n  st_cast(\"POLYGON\") |>\n  mutate(area = st_area(geometry)) |> # Calculate the area of each polygon\n  group_by(ADM1_EN) |> # Group by province\n  filter(area == max(area)) |> # Keep the record with the largest area for each province\n  ungroup() |> # Ungroup after filtering\n  select(c(\"ADM1_EN\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in st_cast.sf(thailand_raw, \"POLYGON\"): repeating attributes for all\nsub-geometries for which they may not be constant\n```\n\n\n:::\n\n```{.r .cell-code}\n# change column name\ncolnames(thailand)[1] = \"province_eng\"\n```\n:::\n\n\nWe check if the data contain any duplicate using below code chunk. The output returns 0 meaning there is no duplicate.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanyDuplicated(thailand)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\nNext we use **tmap** to plot the `thailand` sf dataframe and can see all the provinces of Thailand has been plotted properly. For provinces with small islands, only the mainland parts with the largest area are kept.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(thailand) +\n  tm_polygons() +\n  tm_text(\"province_eng\", size = 0.2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nThe below code is used to check `thailand` sf dataframe again, which shows the geometry type is already POLYGON. This sf dataframe will be used to define the province boundaries for the remaining analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthailand\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 77 features and 1 field\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n# A tibble: 77 × 2\n   province_eng                                                         geometry\n   <chr>                                                           <POLYGON [°]>\n 1 Bangkok                  ((100.6139 13.95462, 100.6143 13.95442, 100.6149 13…\n 2 Samut Prakan             ((100.7306 13.71713, 100.7307 13.71681, 100.7313 13…\n 3 Nonthaburi               ((100.3415 14.10079, 100.3415 14.10001, 100.3415 14…\n 4 Pathum Thani             ((100.8916 14.24576, 100.8916 14.24365, 100.8916 14…\n 5 Phra Nakhon Si Ayutthaya ((100.5131 14.6563, 100.5132 14.65629, 100.5135 14.…\n 6 Ang Thong                ((100.3332 14.79853, 100.3334 14.79811, 100.3335 14…\n 7 Lop Buri                 ((101.3453 15.75254, 101.3457 15.75224, 101.3466 15…\n 8 Sing Buri                ((100.3691 15.0894, 100.3697 15.0891, 100.3708 15.0…\n 9 Chai Nat                 ((100.1199 15.41243, 100.121 15.41234, 100.1229 15.…\n10 Saraburi                 ((101.3994 15.07373, 101.3995 15.07373, 101.3998 15…\n# ℹ 67 more rows\n```\n\n\n:::\n:::\n\n\n## Import Domestic Tourism Statistics\n\nThe below code chunk read in `thailand_domestic_tourism_2019_2023_ver2.csv` using `read_csv()` and remove the columns in Thai language.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntourism_raw = read_csv(\"data/rawdata/thailand_domestic_tourism_2019_2023_ver2.csv\") |>\n  select(-c(\"province_thai\",\"region_thai\")) # exclude column in Thai language\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 30800 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): province_thai, province_eng, region_thai, region_eng, variable\ndbl  (1): value\ndate (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\nThe `tourism_raw` tible dataframe includes the below columns and variables:\n\n-   **date**: The month and year in which the statistics were recorded. The dataset covers the years 2019-2023.\n\n-   **province_eng**:The name of the province in English.\n\n-   **region_eng**:The name of the region in Thailand to which the province belongs, in English.\n\n-   **value**: value of the data being recorded\n\n-   **variables**:The 8 type of data being recorded as follows:\n\n    -   r**atio_tourist_stay**: ratio of tourist stay over-night (total rooms booked/total available rooms)\n\n    -   **no_tourist_stay**: The number of tourists who stay over-night\n\n    -   **no_tourist_all**: The total number of domestic tourists who visited the province\n\n    -   **no_tourist_thai**: The number of Thai tourists who visited the province\n\n    -   **no_tourist_foreign**: The number of foreign tourists who visited the province\n\n    -   **revenue_all**: The revenue generated by the tourism industry in the province, in Thai Baht\n\n    -   **revenue_thai**: The revenue generated by Thai tourists in the province, in Thai Baht\n\n    -   **revenue_foreign**: The revenue generated by foreign tourists in the province, in Thai Baht\n\nThe below code chunks pivots the dataframe from thin format to wide format using `pivot_wider()` and add in these additional columns:\n\n-   **revenue_per_tourist**: revenue generated per tourist (= revenue_all / no_tourist_all)\n\n-   **revenue_per_thai_tourist**: revenue generated per Thai tourist (= revenue_thai/no_tourist_thai)\n\n-   **revenue_per_foreign_tourist**: revenue generated per foreign tourist (= revenue_foreign/no_tourist_foreign)\n\n-   **foreign_thai_tourist**: ratio of foreign tourist to Thai tourist (= no_tourist_foreign/no_tourist_thai)\n\n-   **year_month**: derive from `date` value in YYYYMM format and convert to integer type\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntourism <- tourism_raw %>%\n  pivot_wider(names_from = variable, values_from = value) |>\n  mutate(revenue_per_tourist = ifelse(no_tourist_all == 0, 0, revenue_all / no_tourist_all)) |>\n  mutate(revenue_per_thai_tourist = ifelse(no_tourist_thai == 0,0,revenue_thai/no_tourist_thai)) |>\n  mutate(revenue_per_foreign_tourist = ifelse(no_tourist_foreign == 0,0,revenue_foreign/no_tourist_foreign)) |>\n  mutate(foreign_thai_tourist = ifelse(no_tourist_thai == 0,0, 100*no_tourist_foreign/no_tourist_thai)) |>\n  mutate(month_no = month(date)) %>%\n  mutate(month_fac = month(date,\n                       label = TRUE, abbr = TRUE)) %>%\n  mutate(year = year(date)) |>\n  mutate(year_month = as.integer(format(as.Date(date), \"%Y%m\")))\n\n\n# View the result\nglimpse(tourism)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 3,850\nColumns: 19\n$ date                        <date> 2019-01-01, 2019-01-01, 2019-01-01, 2019-…\n$ province_eng                <chr> \"Bangkok\", \"Lopburi\", \"Phra Nakhon Si Ayut…\n$ region_eng                  <chr> \"central\", \"central\", \"central\", \"central\"…\n$ ratio_tourist_stay          <dbl> 93.37, 61.32, 73.37, 67.33, 79.31, 71.70, …\n$ no_tourist_stay             <dbl> 3334971, 51858, 117052, 89850, 27141, 1186…\n$ no_tourist_all              <dbl> 5959075, 268664, 730329, 207236, 79073, 29…\n$ no_tourist_thai             <dbl> 3534061, 266301, 561553, 201400, 78514, 28…\n$ no_tourist_foreign          <dbl> 2425014, 2363, 168776, 5836, 559, 11699, 2…\n$ revenue_all                 <dbl> 81926490000, 457240000, 1438730000, 347790…\n$ revenue_thai                <dbl> 29742580000, 451830000, 1054250000, 336190…\n$ revenue_foreign             <dbl> 52183910000, 5410000, 384480000, 11600000,…\n$ revenue_per_tourist         <dbl> 13748.189, 1701.903, 1969.975, 1678.232, 1…\n$ revenue_per_thai_tourist    <dbl> 8415.978, 1696.689, 1877.383, 1669.265, 12…\n$ revenue_per_foreign_tourist <dbl> 21519.014, 2289.463, 2278.049, 1987.663, 1…\n$ foreign_thai_tourist        <dbl> 68.6183402, 0.8873418, 30.0552219, 2.89771…\n$ month_no                    <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ month_fac                   <ord> Jan, Jan, Jan, Jan, Jan, Jan, Jan, Jan, Ja…\n$ year                        <dbl> 2019, 2019, 2019, 2019, 2019, 2019, 2019, …\n$ year_month                  <int> 201901, 201901, 201901, 201901, 201901, 20…\n```\n\n\n:::\n:::\n\n\n# Exploratory Data Analysis of Domestic Tourism Statistics\n\nThis section performs EDA on the attribute dataset to understand the trend and allocation of Thailand's tourism statistics.\n\n## Tourism Indicators Trend\n\n### Total Revenue\n\nThe below code chunk uses `ggplot` to plot the line chart depicting tourism revenue trends in Thailand over time, segmented into total revenue (`revenue_all`), revenue from Thai tourist (`revenue_thai`) and revenue from foreign tourist (`revenue_foreign`).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsf_long <- tourism %>%\n  group_by(year_month) |>\n  summarize(revenue_all = sum(revenue_all),\n            revenue_thai = sum(revenue_thai),\n            revenue_foreign = sum(revenue_foreign)) |>\n  pivot_longer(cols = c(revenue_all, revenue_thai, revenue_foreign), \n               names_to = \"revenue_type\", \n               values_to = \"revenue\")\n\n# Create the line plot\nggplot(sf_long, aes(x = factor(year_month), y = revenue, color = revenue_type, group = revenue_type)) +\n  geom_line() +\n  geom_point() +\n  labs(title = \"Tourism Revenue Over Time\",\n       x = \"Year-Month\",\n       y = \"Revenue\",\n       color = \"Revenue Type\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nKey observations frome the above chart:\n\n-   **Sharp Decline in Early 2020**: All revenue categories plummet in early 2020, coinciding with the onset of the COVID-19 pandemic. Foreign tourism (revenue_foreign) drops to nearly zero, while domestic revenue (revenue_thai) remains slightly above zero.\n\n-   **Slow Recovery Starting Mid-2021**: Starting in September 2021, revenues begin to recover. Domestic revenue (revenue_thai) shows a more gradual and consistent rebound, while foreign revenue recovers at a slower pace but picks up by 2022.\n\n-   **Post-2021 Recovery Trends**: Foreign tourism begins to recover more noticeably after 2022, with a sharp rise in revenues.\n\n-   **Dependence on Foreign Tourism**: The gap between `revenue_all` and `revenue_thai` highlights the significant contribution of foreign tourists to total tourism revenue. Pre-2020, foreign tourism was a major driver of revenue, and its slower recovery delayed overall recovery until mid-2022.\n\nOverall, while tourism revenues have been recovering since 2021, we can see the industry was severely impacted by the pandemic, with foreign tourism showing the steepest decline and the slowest rebound. Domestic tourism played a key role in stabilizing the economy before foreign tourism recovered. Below is an illustration on Covid timeline in Thailand in 2020 for your reference.\n\n![](data/thaidland%20covid%20timeline.png)\n\n### Number of Tourists\n\nNext we look at the monthly trend of spend per tourist\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsf_long_tourist <- tourism %>%\n  group_by(year_month) |>\n  summarize(no_tourist_all = sum(no_tourist_all),\n            no_tourist_thai = sum(no_tourist_thai),\n            no_tourist_foreign = sum(no_tourist_foreign)) |>\n  pivot_longer(cols = c(no_tourist_all, no_tourist_thai, no_tourist_foreign), \n               names_to = \"tourist_type\", \n               values_to = \"tourist\")\n\n# Create the line plot\nggplot(sf_long_tourist, aes(x = factor(year_month), y = tourist, color = tourist_type, group = tourist_type)) +\n  geom_line() +\n  geom_point() +\n  labs(title = \"Number of Tourists Over Time\",\n       x = \"Year-Month\",\n       y = \"Tourist\",\n       color = \"Tourist Type\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nThe number of tourists over time chart demonstrates similar trend to the Revenue over time chart, with a significant drop in early 2020 due to COVID pandemic, then slowly recover from Mid 2021. However, there is 1 significant difference compared to revenue contribution, where Thai tourists is the main drivers of the total number of tourist, not foreign tourists.\n\n### Average Ratio of Tourist Stay and Foreign to Thai tourists\n\nNext we look at the average ratio of tourist stay and Foreign to Thai tourist over time.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsf_long_ratio <- tourism %>%\n  group_by(year_month) |>\n  summarize(ratio_tourist_stay = mean(ratio_tourist_stay),\n            foreign_thai_tourist = mean(foreign_thai_tourist)) |>\n  pivot_longer(cols = c(ratio_tourist_stay, foreign_thai_tourist), \n               names_to = \"ratio_type\", \n               values_to = \"ratio\")\n\n# Create the line plot\nggplot(sf_long_ratio, aes(x = factor(year_month), y = ratio, color = ratio_type, group = ratio_type)) +\n  geom_line() +\n  geom_point() +\n  labs(title = \"Tourism Ratio Over Time\",\n       x = \"Year-Month\",\n       y = \"Tourism Ratio\",\n       color = \"Ratio Type\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nKey observations from above chart:\n\n-   **Ratio of foreign tourists to Thai tourists**: the ratio starts at a high level in 2019, suggesting a predominance of foreign tourists during this period. The ratio drops significantly in May 2020 due to the pandemic restriction, then slowly recovers from April 2022.\n\n-   **The revenue per tourist in April and May 2020** are significantly higher than other months, this may be due to the pandemic travel bans and curfew happened during these 2 months, causing the number of tourists, especially foreign tourists to be very low.\n\nRatio of tourist stay over-night: this ratio also drops significantly in 2020, albeit the recovery speed is much faster from mid 2021, indicating the increasing contribution of Thai tourist to booked accommodation.\n\n## Tourism by Province in 2022\n\nWe will focus on 2022 as this the year the tourism industry in Thailand started to recover after the pandemic and data is available for all months.\n\n### Total Revenue\n\nThe below code chunks plot the full year 2022 revenue by province using `ggplot`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter data for the year 2022 and aggregate by province\ntourism_2022 <- tourism %>%\n  filter(year == 2022) %>%\n  group_by(province_eng) %>%\n  summarize(total_revenue = sum(revenue_all))\n\n# Plot a bar chart showing total revenue by province for 2022\nggplot(tourism_2022, aes(x = reorder(province_eng,total_revenue), y = total_revenue)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  labs(title = \"Total Revenue by Province in 2022\",\n       x = \"Province\",\n       y = \"Total Revenue\") +\n  theme_minimal() +\n  theme(axis.text.y = element_text(angle = 0, hjust = 1)) +  # Ensure province labels are readable\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nWe can see the revenue distribution among Thailand's provinces is highly skewed. The top 4 provinces with significantly higher revenue than the remaining provinces are: Bangkok, Phuket, Chonburi, Chiang Mai.\n\n### Number of Tourist by Province\n\nThe below code chunk plots the total number of tourists by province in Thailand in 2022.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter data for the year 2022 and aggregate by province\ntourist_2022 <- tourism %>%\n  filter(year == 2022) %>%\n  group_by(province_eng) %>%\n  summarize(total_tourist = sum(no_tourist_all))\n\n# Plot a bar chart showing total revenue by province for 2022\nggplot(tourist_2022, aes(x = reorder(province_eng,total_tourist), y = total_tourist)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  labs(title = \"Number of Tourists by Province in 2022\",\n       x = \"Province\",\n       y = \"Number of Tourists\") +\n  theme_minimal() +\n  theme(axis.text.y = element_text(angle = 0, hjust = 1)) +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nThe number of tourists by province is also unevenly distributed, although less skewed than the revenue distribution. The top 4 provinces with significantly higher number of tourists compared to the remaining provinces are: Bangkok, Chonburi, Kanchanaburi, Prachuap Khiri Khan. Among the top 4 provinces with highest revenue, only Bangkok and Chonburi are also in the top 4 provinces with highest number of tourist, indicating the revenue per tourist is higher in Phuket and Chiang Mai.\n\n## Correlation Matrix\n\nThe below code chunk plots a correlation matrix across the available tourism indicators to understand the relationships between all pair of variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_subset <- tourism[, c(\"revenue_all\", \"no_tourist_all\", \"ratio_tourist_stay\",\"no_tourist_stay\",\"no_tourist_thai\",\"no_tourist_foreign\",\"revenue_thai\",\"revenue_foreign\",\"revenue_per_tourist\",\"revenue_per_thai_tourist\",\"revenue_per_foreign_tourist\",\"foreign_thai_tourist\")]\n\n# Compute the correlation matrix\nM <- cor(data_subset, use = \"complete.obs\")\n\n# Visualize the correlation matrix\ncorrplot(M, method = 'number',order = 'AOE', tl.cex = 0.6)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nBase on the above matrix, the below variables will be excluded from further analysis due to strong correlation with the key indicators (revenue_all, no_tourist_all, ratio_tourist_stay):\n\n-   no_tourist_thai and revenue_thai: high correlation (0.96 and 0.94) with no_tourist_all\n\n-   no_tourist_stay: high correlation (0.96) with no_tourist_all\n\n-   no_tourist_foreign and revenue_foreign: high correlation (0.96 and 0.98) with revenue_all\n\n-   revenue_per_foreign_tourist: high correlation (0.71) with revenue_per_tourist\n\n-   revenue_per_thai_tourist: reflect similar information to revenue_per_tourist and foreign_thai_tourist\n\n# Data Wrangling\n\nData across 2022 is aggregated using the below code chunk. 2022 is selected as this is the year the tourism economy started to recover and data is available for all months. The aggregated columns are calculated as below:\n\n-   `no_tourist_all`, `revenue_all`: sum from the respective column in `tourism` sf dataframe.\n\n-   `avg_ratio_stay`: average across `ratio_tourist_stay` of the province across 12 months.\n\n-   `revenue_per_tourist`: take total revenue divided by total number of tourists.\n\n-   `revenue_per_thai_tourist`: take total revenue generated by Thai tourist divided by the number of Thai tourists.\n\n-   `foreign_thai_tourist`: take the number of foreign tourists divided by the number of Thai tourists.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntourism_2022 = tourism |>\n  filter(year == 2022) |>\n  group_by(province_eng) |>\n  summarize(no_tourist_all = sum(no_tourist_all),\n            revenue_all = sum(revenue_all),\n            avg_ratio_stay = mean(ratio_tourist_stay),\n            revenue_per_tourist = sum(revenue_all)/sum(no_tourist_all),\n            revenue_per_thai_tourist = sum(revenue_thai)/sum(no_tourist_thai),\n            foreign_thai_tourist = 100*sum(no_tourist_foreign)/sum(no_tourist_thai))\n```\n:::\n\n\nThe below code chunk joins `thailand` with `tourism_2022` using `left_join()` to derive a tourism economy indicators layer within Thailand province boundaries for further spatial autocorrelation testing and analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthailand_tourism2022 <- left_join(thailand, tourism_2022)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(province_eng)`\n```\n\n\n:::\n:::\n\n\nThe below code output reveals some records are having NA values, this is due to province's nameing between `thailand` and `tourism` sf dataframe are slightly different. The mismatch province names are filtered as below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntourism_2022_na <- thailand_tourism2022 %>%\n  filter(is.na(revenue_all))\ntourism_2022_na\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 8 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 98.20504 ymin: 8.12658 xmax: 104.9085 ymax: 17.69221\nGeodetic CRS:  WGS 84\n# A tibble: 8 × 8\n  province_eng                               geometry no_tourist_all revenue_all\n* <chr>                                 <POLYGON [°]>          <dbl>       <dbl>\n1 Lop Buri         ((101.3453 15.75254, 101.3457 15.…             NA          NA\n2 Chai Nat         ((100.1199 15.41243, 100.121 15.4…             NA          NA\n3 Chon Buri        ((101.1435 13.58932, 101.1444 13.…             NA          NA\n4 Prachin Buri     ((101.4881 14.45835, 101.4884 14.…             NA          NA\n5 Buri Ram         ((102.9303 15.79514, 102.9303 15.…             NA          NA\n6 Si Sa Ket        ((104.1052 15.56826, 104.1053 15.…             NA          NA\n7 Nong Bua Lam Phu ((102.2866 17.69207, 102.2867 17.…             NA          NA\n8 Phangnga         ((98.40774 9.347689, 98.40777 9.3…             NA          NA\n# ℹ 4 more variables: avg_ratio_stay <dbl>, revenue_per_tourist <dbl>,\n#   revenue_per_thai_tourist <dbl>, foreign_thai_tourist <dbl>\n```\n\n\n:::\n:::\n\n\nWe replace the province name in `thailand` with the same name in `tourism` sf dataframe using below code chunk.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthailand <- thailand %>%\n  mutate(province_eng = ifelse(province_eng == \"Si Sa Ket\", \"Sisaket\", \n                   ifelse(province_eng == \"Buri Ram\", \"Buriram\",\n                    ifelse(province_eng == \"Lop Buri\", \"Lopburi\",\n                    ifelse(province_eng == \"Chai Nat\", \"Chainat\",\n                    ifelse(province_eng == \"Chon Buri\", \"Chonburi\",\n                    ifelse(province_eng == \"Prachin Buri\", \"Prachinburi\",\n                    ifelse(province_eng == \"Nong Bua Lam Phu\", \"Nong Bua Lamphu\",\n                    ifelse(province_eng == \"Phangnga\", \"Phang Nga\",\n                          province_eng)))))))))\n```\n:::\n\n\nThe below code chunk performs the join again and check for records with NA value.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthailand_tourism2022 <- left_join(thailand, tourism_2022)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(province_eng)`\n```\n\n\n:::\n\n```{.r .cell-code}\n# Check for records with NA value\ntourism_2022_na <- thailand_tourism2022 %>%\n  filter(is.na(revenue_all))\ntourism_2022_na\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 0 features and 7 fields\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nGeodetic CRS:  WGS 84\n# A tibble: 0 × 8\n# ℹ 8 variables: province_eng <chr>, geometry <GEOMETRY [°]>,\n#   no_tourist_all <dbl>, revenue_all <dbl>, avg_ratio_stay <dbl>,\n#   revenue_per_tourist <dbl>, revenue_per_thai_tourist <dbl>,\n#   foreign_thai_tourist <dbl>\n```\n\n\n:::\n:::\n\n\nThere are no records with NA value. All the provinces are mapped properly between the 2 dataframes now.\n\n# Geovisualization of Tourism Economy Key Indicators\n\nNext `tmap` is used to create choropleth maps of the 5 variables selected as key indicators of Thailand tourism economy basis the above EDGE: `revenue_all`, `no_tourist_all`, `avg_ratio_stay`, `revenue_per_tourist`, `foreign_thai_tourist`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nno_tourist <- tm_shape(thailand_tourism2022) +\n  tm_fill(\"no_tourist_all\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Number of Tourists by Province Map\",\n            legend.position = c(\"left\",\"bottom\"))\n\nrevenue <- tm_shape(thailand_tourism2022) +\n  tm_fill(\"revenue_all\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Revenue by Province Map\",\n            legend.position = c(\"left\",\"bottom\"))\n\nratio_stay <- tm_shape(thailand_tourism2022) +\n  tm_fill(\"avg_ratio_stay\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Average Ratio of Tourist Stay Map\",\n            legend.position = c(\"left\",\"bottom\"))\n\nrev_per_tourist <- tm_shape(thailand_tourism2022) +\n  tm_fill(\"revenue_per_tourist\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Revenue per Tourist by Province Map\")\n\nforeign_thai_tourist <- tm_shape(thailand_tourism2022) +\n  tm_fill(\"foreign_thai_tourist\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Foreign to Thai Tourist Ratio by Province Map\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_arrange(no_tourist, revenue, ratio_stay,\n             ncol=2, nrow = 2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\nKey observations from the above choropleth maps:\n\n-   The maps highlight regional disparities in tourism activity across Thailand.\n\n-   The central and southern regions, particularly around Bangkok, are the dominant tourist destinations in terms of both visitor numbers and revenue generation.\n\n-   The northern and northeastern regions, while having lower tourist numbers and revenue, attract visitors who tend to stay for longer durations.\n\nNext we plot the ratio of foreign to Thai tourist and Revenue per tourist using `tmap_arrange` as below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_arrange(foreign_thai_tourist, rev_per_tourist,\n             ncol=2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n-   The maps highlight the regional disparities in tourism activity and the composition of tourist clientele in Thailand.\n\n-   The central and southern regions, particularly around Bangkok, are the dominant tourist destinations in terms of both foreign tourist arrivals and revenue per tourist.\n\n-   The northern and northeastern regions, while attracting fewer foreign tourists, may have a higher proportion of domestic tourists and potentially lower revenue per tourist.\n\n-   Coastal areas, especially in the south, often exhibit higher foreign tourist ratios due to their popularity among foreigners.\n\n# Global Measures of Spatial Association\n\nIn this section, Global Moran's I permutation test using Monte Carlo simulation is used to confirm if the variables distribution are statistically spatially dependent.\n\nFirst we derive the neighbors and spatial weights using adaptive distance with 6 neighbors. The below code chunk uses `st_knn()` and `st_weights()` of **sfdep** package to carry out the calculation. Key arguments of these functions:\n\n-   `st_knn()`: **k**: define the number of nearest neighors to be returned.\n\n-   `st_weights()`:\n\n    -   **nb**: A neighbor list created by `st_neighbors()`.\n\n    -   **style**: Specifies the weighting style, with \"W\" (row standardized weights) as the default. Other options include \"B\" (binary coding), \"C\" (globally standardized), \"U\" (C divided by the number of neighbors), and \"S\" (variance-stabilizing scheme by Tiefelsdorf et al., 1999).\n\n    -   **allow_zero**: If TRUE, assigns zero as the lagged value to zones without neighbors.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- thailand_tourism2022 %>%\n  mutate(nb = st_knn(geometry, k = 6),\n         wt = st_weights(nb,\n                         style = \"W\", allow_zero = TRUE),\n         .before = 1)  \n```\n:::\n\n\nNext Global Moran's I permutation test is computed for the key tourism indicators with the below details:\n\n-   Null hypothesis: the observed spatial pattern resemble random distribution. The value at one location does not depend on values of its neighbors.\n\n-   Alpha value = 0.05. We reject the null hypothesis if p-value is smaller than 0.05.\n\nWe set the seed before computation to ensure reproducibility of the result.\n\n::: panel-tabset\n## Number of All Tourists\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nglobal_moran_perm(wm_q$no_tourist_all,\n                       wm_q$nb,\n                       wm_q$wt,\n                  nsim = 99)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.074045, observed rank = 98, p-value = 0.04\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\nThe statistical output shows a p-value smaller than 0.05, providing enough evidence to reject the null hypothesis that the spatial distribution of Number of tourist is random. Since the Moran's I statistic is slightly greater than 0, we can infer that the spatial distribution shows sign of clustering.\n\n## Revenue from All Tourists\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nglobal_moran_perm(wm_q$revenue_all,\n                       wm_q$nb,\n                       wm_q$wt,\n                  nsim = 99)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.0028645, observed rank = 73, p-value = 0.54\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\nAs p-value is larger than 0.05, we cannot reject the null hypothesis that the spatial distribution of total revenue resemble random distribution.\n\n## Average ratio of tourist stay\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nglobal_moran_perm(wm_q$avg_ratio_stay,\n                       wm_q$nb,\n                       wm_q$wt,\n                  nsim = 99)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.17507, observed rank = 100, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\nAs p-value is smaller than 0.05, we can reject the null hypothesis that the spatial distribution of Average ratio of tourist stay resembles random distribution. Since the Moran's I statistic is greater than 0, we can infer that the spatial distribution shows sign of clustering.\n\n## Revenue per tourist\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nglobal_moran_perm(wm_q$revenue_per_tourist,\n                       wm_q$nb,\n                       wm_q$wt,\n                  nsim = 99)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.16271, observed rank = 100, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\nAs p-value is smaller than 0.05, we can reject the null hypothesis that the spatial distribution of Revenue per tourist resembles random distribution. Since the Moran's I statistic is greater than 0, we can infer that the spatial distribution shows sign of clustering.\n\n## Ratio of Foreign to Thai tourist\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nglobal_moran_perm(wm_q$foreign_thai_tourist,\n                       wm_q$nb,\n                       wm_q$wt,\n                  nsim = 99)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.15238, observed rank = 99, p-value = 0.02\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\nAs p-value is smaller than 0.05, we can reject the null hypothesis that the spatial distribution of Ratio of Foreign to Thai tourist resembles random distribution. Since the Moran's I statistic is greater than 0, we can infer that the spatial distribution shows sign of clustering.\n:::\n\nExcept for Revenue from all tourists (`revenue_all`) where the Global Moran's I statistic was not significant, for the remaining 4 variables (Number of All Tourists, Average ratio of tourist stay, Revenue per tourist and Ratio of Foreign to Thai tourist), the results were significant and indicate signs of clustering as the statistic value is larger than 0.\n\n# Local Indicators of Spatial Association (LISA)\n\nLocal Indicators of Spatial Association (LISA) are statistics that assess the presence of clusters or outliers in the spatial distribution of a variable. For example, in analyzing Number of tourist in across Thailand's provinces, local clusters indicate that some provinces have higher or lower Number of tourists than expected by chance, meaning their values deviate from a random spatial distribution.\n\nA LISA map is a categorical map highlighting outliers and clusters. Outliers are classified as High-Low and Low-High, while clusters are categorized as High-High and Low-Low. The detail of each classification is as below:\n\n-   Low-Low: Low value of the variable are clustered in areas with other low values.\n\n-   High-Low: High value of the variable is outlier in areas with other low values.\n\n-   Low-High: Low value of the variable is outlier in areas with other high values.\n\n-   High-High: High value of the variable is clustered in areas with other high values.\n\nThe LISA plots the local Moran’s I of geographical areas with statistically significant p-values to interpret spatial patterns.\n\nIn this section, we examine the LISA map of Thailand's key tourism indicators.\n\n## Total Revenue\n\nFirst we compute the local Moran's I of `revenue_all` at province level using `local_moran()` as in below code chunk.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nlisa_revenue_all <- wm_q %>% \n  mutate(local_moran = local_moran(\n    revenue_all, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_moran)\n```\n:::\n\n\nThe below code chunk plots the LISA map of `revenue_all` using the classification from the *mean* LISA categories.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_sig_revenue_all <- lisa_revenue_all  %>%\n  filter(p_ii_sim < 0.05)\ntmap_mode(\"plot\")\ntm_shape(lisa_revenue_all) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig_revenue_all) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\nKey observations from the LISA map:\n\n-   There are clusters with Low-Low values in the North Easten region of Thailand, indicating low revenue from tourism in this area.\n\n-   There are 2 Low-High clusters adjacent to Bangkok, this indicate the tourism revenue of the area around Bangkok is not evenly distributed.\n\n-   There is 1 High-Low cluster at Kanchanaburi province, indicating the tourism revenue in this area is significantly higher than the surrounding neighbors.\n\n## Number of Tourists\n\nFirst we compute the local Moran's I of `no_tourist_all` at province level using `local_moran()` as in below code chunk.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nlisa_no_tourist_all <- wm_q %>% \n  mutate(local_moran = local_moran(\n    no_tourist_all, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_moran)\n```\n:::\n\n\nThe below code chunk plots the LISA map of `no_tourist_all` using the classification from the *mean* LISA categories.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_sig_no_tourist_all <- lisa_no_tourist_all  %>%\n  filter(p_ii_sim < 0.05)\ntmap_mode(\"plot\")\ntm_shape(lisa_no_tourist_all) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig_no_tourist_all) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n\nKey observations from above LISA map:\n\n-   Similar to the LISA map on `revenue_all`, there are Low-Low clusters in the North Easter region and Low-High clusters around Bangkok.\n\n-   There is 1 High-High cluster at Phetchaburi province, suggesting this can be a popular tourist destination compared to surrounding provinces.\n\n## Average Ratio Tourist Stay\n\nFirst we compute the local Moran's I of `avg_ratio_stay` at province level using `local_moran()` as in below code chunk.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nlisa_avg_ratio_stay <- wm_q %>% \n  mutate(local_moran = local_moran(\n    avg_ratio_stay, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_moran)\n```\n:::\n\n\nThe below code chunk plots the LISA map of `avg_ratio_stay` using the classification from the *mean* LISA categories.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_sig_avg_ratio_stay <- lisa_avg_ratio_stay  %>%\n  filter(p_ii_sim < 0.05)\ntmap_mode(\"plot\")\ntm_shape(lisa_avg_ratio_stay) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig_avg_ratio_stay) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n\nKey observations from above LISA map:\n\n-   There are High-High clusters in the North region, suggesting tourists tend to stay overnight in this area.\n\n-   There is 1 Low-High cluster also in the North region, suggesting tourists are less likely to stay overnight in this province, they may prefer to stay in the neighboring High-High provinces.\n\n## Foreign to Thai tourist\n\nFirst we compute the local Moran's I of `foreign_thai_tourist` at province level using `local_moran()` as in below code chunk.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nlisa_foreign_thai_tourist <- wm_q %>% \n  mutate(local_moran = local_moran(\n    foreign_thai_tourist, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_moran)\n```\n:::\n\n\nThe below code chunk plots the LISA map of `foreign_thai_tourist` using the classification from the *mean* LISA categories.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_sig_foreign_thai_tourist <- lisa_foreign_thai_tourist  %>%\n  filter(p_ii_sim < 0.05)\ntmap_mode(\"plot\")\ntm_shape(lisa_foreign_thai_tourist) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig_foreign_thai_tourist) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n\n\nKey observations from above LISA map:\n\n-   There are Low-Low clusters in the Central region, suggesting these provinces are less popular to foreign visitors.\n\n-   There are High-High clusters in the Coastal region at Phuket,\\\n    Phang Nga and Surat Thani provinces. These are well-known destination for foreign visitors.\n\n## Revenue per tourist\n\nFirst we compute the local Moran's I of `revenue_per_tourist` at province level using `local_moran()` as in below code chunk.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nlisa_revenue_per_tourist <- wm_q %>% \n  mutate(local_moran = local_moran(\n    revenue_per_tourist, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_moran)\n```\n:::\n\n\nThe below code chunk plots the LISA map of `revenue_per_tourist` using the classification from the *mean* LISA categories.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_sig_revenue_per_tourist <- lisa_revenue_per_tourist  %>%\n  filter(p_ii_sim < 0.05)\ntmap_mode(\"plot\")\ntm_shape(lisa_revenue_per_tourist) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig_revenue_per_tourist) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n:::\n\n\nKey observations from above LISA map:\n\n-   There are Low-Low clusters in the North East and Central regions, suggesting the revenue per tourist is lower in the provinces.\n\n-   There are High-High clusters in Phukey and Phang Nga province. As these areas are popular to foreign visitors (also High-High cluster on Foreign to Thai tourists ratio), suggesting foreign visitors tend to spend more on their visits.\n\n# Emerging Hot Spot Analysis (EHSA)\n\nEmerging Hot Spot Analysis (EHSA) is a spatio-temporal method for tracking the evolution of hot and cold spots over time. It involves four key steps:\n\n1.  Building a space-time cube\n\n2.  Calculating the Getis-Ord local Gi\\* statistic with FDR correction for each bin\n\n3.  Evaluating the cold and hot spot trends using the Mann-Kendall test\n\n4.  Categorizing each location based on its trend z-score and p-value, as well as the hot spot z-score and p-value for each bin.\n\nBelow are the details of each hot spot and cold spot trend as reference from Prof KAM Tin Seong [Lesson 5: Global and Local Measures of Spatial Association](https://isss626-ay2024-25aug.netlify.app/lesson/lesson05/lesson05-glsa#/title-slide).\n\n::: panel-tabset\n### Hot Spot Trends\n\n| **Pattern Name**      | **Definition**                                                                                                                                                                                                                                                                                                           |\n|:-----------|:----------------------------------------------------------|\n| No pattern detected   | Does not fall into any of the hot or cold spot patterns defined below.                                                                                                                                                                                                                                                   |\n| New Hot Spot          | A location that is a statistically significant hot spot for the final time step and has never been a statistically significant hot spot before.                                                                                                                                                                          |\n| Consecutive Hot Spot  | A location with a single uninterrupted run of at least two statistically significant hot spot bins in the final time-step intervals. The location has never been a statistically significant hot spot prior to the final hot spot run and less than 90 percent of all bins are statistically significant hot spots.      |\n| Intensifying Hot Spot | A location that has been a statistically significant hot spot for 90 percent of the time-step intervals, including the final time step. In addition, the intensity of clustering of high counts in each time step is increasing overall and that increase is statistically significant.                                  |\n| Persistent Hot Spot   | A location that has been a statistically significant hot spot for 90 percent of the time-step intervals with no discernible trend in the intensity of clustering over time.                                                                                                                                              |\n| Diminishing Hot Spot  | A location that has been a statistically significant hot spot for 90 percent of the time-step intervals, including the final time step. In addition, the intensity of clustering in each time step is decreasing overall and that decrease is statistically significant.                                                 |\n| Sporadic Hot Spot     | A statistically significant hot spot for the final time-step interval with a history of also being an on-again and off-again hot spot. Less than 90 percent of the time-step intervals have been statistically significant hot spots and none of the time-step intervals have been statistically significant cold spots. |\n| Oscillating Hot Spot  | A statistically significant hot spot for the final time-step interval that has a history of also being a statistically significant cold spot during a prior time step. Less than 90 percent of the time-step intervals have been statistically significant hot spots.                                                    |\n| Historical Hot Spot   | The most recent time period is not hot, but at least 90 percent of the time-step intervals have been statistically significant hot spots.                                                                                                                                                                                |\n\n### Cold Spot Trends\n\n| **Pattern Name**       | **Definition**                                                                                                                                                                                                                                                                                                             |\n|:------------|:----------------------------------------------------------|\n| New Cold Spot          | A location that is a statistically significant cold spot for the final time step and has never been a statistically significant cold spot before.                                                                                                                                                                          |\n| Consecutive Cold Spot  | A location with a single uninterrupted run of at least two statistically significant cold spot bins in the final time-step intervals. The location has never been a statistically significant cold spot prior to the final cold spot run and less than 90 percent of all bins are statistically significant cold spots.    |\n| Intensifying Cold Spot | A location that has been a statistically significant cold spot for 90 percent of the time-step intervals, including the final time step. In addition, the intensity of clustering of low counts in each time step is increasing overall and that increase is statistically significant.                                    |\n| Persistent Cold Spot   | A location that has been a statistically significant cold spot for 90 percent of the time-step intervals with no discernible trend in the intensity of clustering of counts over time.                                                                                                                                     |\n| Diminishing Cold Spot  | A location that has been a statistically significant cold spot for 90 percent of the time-step intervals, including the final time step. In addition, the intensity of clustering of low counts in each time step is decreasing overall and that decrease is statistically significant.                                    |\n| Sporadic Cold Spot     | A statistically significant cold spot for the final time-step interval with a history of also being an on-again and off-again cold spot. Less than 90 percent of the time-step intervals have been statistically significant cold spots and none of the time-step intervals have been statistically significant hot spots. |\n| Oscillating Cold Spot  | A statistically significant cold spot for the final time-step interval that has a history of also being a statistically significant hot spot during a prior time step. Less than 90 percent of the time-step intervals have been statistically significant cold spots.                                                     |\n| Historical Cold Spot   | The most recent time period is not cold, but at least 90 percent of the time-step intervals have been statistically significant cold spots.                                                                                                                                                                                |\n:::\n\n## Create a Time Series Cube\n\nThe code chunk below uses `spacetime()` of sfdep to create an spatio-temporal cube from `tourism` and `thailand` dataframe. The `.loc_col` and `.time_col` arguments are used to define the location and time period column from the relevant dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthailand_st = spacetime(tourism, thailand,\n                        .loc_col = \"province_eng\",\n                        .time_col = \"year_month\")\n```\n:::\n\n\nNext `is_spacetime_cube()` of sfdep package is used to verify if the conversion is successful. The output is TRUE meaning `thailand_st` is already a spatio-temporal cube.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nis_spacetime_cube(thailand_st)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n## Perform EHSA\n\nFirst we identify the neighbors and calculate the inverse distance weight using below code chunk.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthailand_nb <- thailand_st %>%\n  activate(\"geometry\") %>%\n  mutate(nb = include_self(\n    st_knn(geometry, k=6)),\n    wt = st_inverse_distance(nb, \n                             geometry, \n                             scale = 1,\n                             alpha = 1),\n    .before = 1) %>%\n  set_nbs(\"nb\") %>%\n  set_wts(\"wt\")\n```\n:::\n\n\nWe perform EHSA using the `emerging_hotspot_analysis()` function from sfdep. **Emerging Hot Spot Analysis** detects trends in spatial clustering over time by combining the Getis-Ord Gi\\* statistic with the Mann-Kendall trend test to identify temporal patterns associated with local clustering of hot and cold spots. The function requires a spacetime object (`thailand_st`) and the variable name for the .var argument. The k argument sets the number of time lags (default is 1), and nsim specifies the number of simulations.\n\n### Total Revenue\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nehsa_revenue_all <- emerging_hotspot_analysis(\n  x = thailand_st, \n  .var = \"revenue_all\", \n  k = 1, \n  nsim = 99\n)\n```\n:::\n\n\nThe distribution of statistically significant EHSA classes is visualized with `ggplot` using below code chunk.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = filter(ehsa_revenue_all, p_value < 0.05),\n       aes(x = classification)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-43-1.png){width=672}\n:::\n:::\n\n\nWe can see majority of the areas has sporadic coldspot detected. This can be due to the impact of COVID-19 travel restriction.\n\nNext we join `thailand` sf dataframe with the derived `ehsa` using `left_join()` as below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthailand_ehsa_revenue_all <- thailand %>%\n  left_join(ehsa_revenue_all,\n            by = join_by(province_eng == location))\n```\n:::\n\n\nThe below code chunk uses this joined dataframe to visualize the geographic distribution of EHSA classes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa_sig_revenue_all <- thailand_ehsa_revenue_all  %>%\n  filter(p_value < 0.05)\ntmap_mode(\"plot\")\ntm_shape(thailand_ehsa_revenue_all) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(ehsa_sig_revenue_all) +\n  tm_fill(\"classification\") + \n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-45-1.png){width=672}\n:::\n:::\n\n\nThe EHSA map provides insights into the spatial distribution of emerging hotspots and coldspots for tourism revenue in Thailand provinces from January 2019 to February 2023.\n\nSeveral provinces in the northern, northeastern and southern regions of Thailand are identified as **sporadic coldspots**. This suggests that these regions experienced some declines or stagnation in tourism revenue, in which COVID-19 travel restriction can be a major factor.\n\n### Number of Tourists\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nehsa_no_tourist_all <- emerging_hotspot_analysis(\n  x = thailand_st, \n  .var = \"no_tourist_all\", \n  k = 1, \n  nsim = 99\n)\n```\n:::\n\n\nThe distribution of statistically significant EHSA classes is visualized with `ggplot` using below code chunk.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = filter(ehsa_no_tourist_all, p_value < 0.05),\n       aes(x = classification)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-47-1.png){width=672}\n:::\n:::\n\n\nWe can see most of the areas has no pattern detected.\n\nNext we join `thailand` sf dataframe with the derived `ehsa` using `left_join()` as below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthailand_ehsa_no_tourist_all <- thailand %>%\n  left_join(ehsa_no_tourist_all,\n            by = join_by(province_eng == location))\n```\n:::\n\n\nThe below code chunk uses this joined dataframe to visualize the geographic distribution of EHSA classes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa_sig <- thailand_ehsa_no_tourist_all  %>%\n  filter(p_value < 0.05)\ntmap_mode(\"plot\")\ntm_shape(thailand_ehsa_no_tourist_all) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(ehsa_sig) +\n  tm_fill(\"classification\") + \n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-49-1.png){width=672}\n:::\n:::\n\n\nThe map shows only 1 oscillating coldspot in Phichit province, suggesting this province used to be popular to tourists in the past but not as of February 2023.\n\n### Ratio Tourist Stay\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nehsa_ratio_tourist_stay <- emerging_hotspot_analysis(\n  x = thailand_st, \n  .var = \"ratio_tourist_stay\", \n  k = 1, \n  nsim = 99\n)\n```\n:::\n\n\nThe distribution of statistically significant EHSA classes is visualized with `ggplot` using below code chunk.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = filter(ehsa_ratio_tourist_stay, p_value < 0.05),\n       aes(x = classification)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-51-1.png){width=672}\n:::\n:::\n\n\nWe can see majority of the areas has oscilating hotspot.\n\nNext we join `thailand` sf dataframe with the derived `ehsa` using `left_join()` as below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthailand_ehsa_ratio_tourist_stay <- thailand %>%\n  left_join(ehsa_ratio_tourist_stay,\n            by = join_by(province_eng == location))\n```\n:::\n\n\nThe below code chunk uses this joined dataframe to visualize the geographic distribution of EHSA classes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa_sig_ratio_tourist_stay <- thailand_ehsa_ratio_tourist_stay  %>%\n  filter(p_value < 0.05)\ntmap_mode(\"plot\")\ntm_shape(thailand_ehsa_ratio_tourist_stay) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(ehsa_sig_ratio_tourist_stay) +\n  tm_fill(\"classification\") + \n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-53-1.png){width=672}\n:::\n:::\n\n\nKey observations from the above EHSA map:\n\n-   Several provinces in the northern and central regions are identified as **oscillating hotspots.** This suggests these regions experienced significant fluctuations in the ratio of tourist stay overnight during the period 2019-2023, potentially indicating emerging tourist destinations with growing popularity.\n\n-   Some provinces in the northeastern region are classified as **oscillating coldspots**. This suggests these regions experienced fluctuations in the ratio of tourist stay overnight with an overall downward trend.\n\n### Foreign to Thai tourists ratio\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nehsa_foreign_thai_tourist <- emerging_hotspot_analysis(\n  x = thailand_st, \n  .var = \"foreign_thai_tourist\", \n  k = 1, \n  nsim = 99\n)\n```\n:::\n\n\nThe distribution of statistically significant EHSA classes is visualized with `ggplot` using below code chunk.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = filter(ehsa_foreign_thai_tourist, p_value < 0.05),\n       aes(x = classification)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-55-1.png){width=672}\n:::\n:::\n\n\nWe can see majority of the areas has sporadic coldspot pattern.\n\nNext we join `thailand` sf dataframe with the derived `ehsa` using `left_join()` as below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthailand_ehsa_foreign_thai_tourist <- thailand %>%\n  left_join(ehsa_foreign_thai_tourist,\n            by = join_by(province_eng == location))\n```\n:::\n\n\nThe below code chunk uses this joined dataframe to visualize the geographic distribution of EHSA classes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa_sig_foreign_thai_tourist <- thailand_ehsa_foreign_thai_tourist  %>%\n  filter(p_value < 0.05)\ntmap_mode(\"plot\")\ntm_shape(thailand_ehsa_foreign_thai_tourist) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(ehsa_sig_foreign_thai_tourist) +\n  tm_fill(\"classification\") + \n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-57-1.png){width=672}\n:::\n:::\n\n\n-   Several provinces in the central and northern regions of Thailand are identified as **sporadic hotspots**. This suggests significant fluctuations in the ratio of foreign to Thai tourists in these areas during the study period, potentially indicating increased popularity among foreign visitors.\n\n-   Many provinces in the northern, northeastern and central region around Bangkok are classified as **sporadic coldspots**, indicating fluctuations in the ratio of foreign to Thai tourists with an overall downward trend.\n\n### Revenue per Tourist\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nehsa_revenue_per_tourist <- emerging_hotspot_analysis(\n  x = thailand_st, \n  .var = \"revenue_per_tourist\", \n  k = 1, \n  nsim = 99\n)\n```\n:::\n\n\nThe distribution of statistically significant EHSA classes is visualized with `ggplot` using below code chunk.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = filter(ehsa_revenue_per_tourist, p_value < 0.05),\n       aes(x = classification)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-59-1.png){width=672}\n:::\n:::\n\n\nWe can see majority of the areas has sporadic coldspot pattern.\n\nNext we join `thailand` sf dataframe with the derived `ehsa` using `left_join()` as below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthailand_ehsa_revenue_per_tourist <- thailand %>%\n  left_join(ehsa_revenue_per_tourist,\n            by = join_by(province_eng == location))\n```\n:::\n\n\nThe below code chunk uses this joined dataframe to visualize the geographic distribution of EHSA classes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa_sig_revenue_per_tourist <- thailand_ehsa_revenue_per_tourist  %>%\n  filter(p_value < 0.05)\ntmap_mode(\"plot\")\ntm_shape(thailand_ehsa_revenue_per_tourist) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(ehsa_sig_revenue_per_tourist) +\n  tm_fill(\"classification\") + \n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-61-1.png){width=672}\n:::\n:::\n\n\n-   Several provinces in the central and northern regions of Thailand, are identified as **sporadic hotspots**. This suggests significant fluctuations in revenue per tourist during the study period, with the overall value is still high compared to the neighboring provinces.\n\n-   Many provinces nationwide are classified as **sporadic coldspots**, indicating fluctuations in revenue per tourist with a relatively low value compared to their neighbors, may of which has sporadic hotspots pattern.\n\n# Conclusion\n\nThe analysis of spatial association for Thailand's tourism economy reveals distinct patterns across global and local measures, as well as temporal trends identified through Emerging Hot Spot Analysis (EHSA) in the context of COVID-19 travel restriction. The 5 tourism key indicators considered are: Total revenue, Number of tourists, Ratio of tourists stay overnight, Ratio of foreign to Thai tourist and Revenue per tourist.\n\nGlobally, most variables—except for total revenue—demonstrate significant clustering, indicating that tourist behavior and economic impact are spatially dependent. For instance, the number of tourists, average stay ratio, revenue per tourist, and the ratio of foreign to Thai tourists all show signs of spatial clustering, suggesting that tourism dynamics are influenced by location.\n\nLocally, the LISA maps reveal notable spatial disparities. Low-Low clusters in the northeastern region indicate low revenue and tourist activity, while Low-High clusters around Bangkok highlight uneven revenue distribution. High-High clusters, such as those in Phetchaburi and Phuket, suggest areas of concentrated tourism activity, likely driven by foreign visitors, who also tend to spend more in these high-revenue provinces.\n\nEmerging Hot Spot Analysis (EHSA) further reinforces these spatial insights with temporal trends. Several provinces in northern, northeastern, and southern Thailand are identified as sporadic cold spots for total revenue, likely impacted by COVID-19 travel restrictions. Oscillating hotspots and cold spots in tourist stay ratios suggest regions with fluctuating popularity, especially in the northern and central provinces, where overnight stays have seen both growth and decline. Sporadic hotspots in the ratio of foreign to Thai tourists in central and northern regions signal increasing foreign interest in these areas.\n\nIn conclusion, the combined results of Global Moran's I, LISA, and EHSA indicate both spatial clustering and temporal shifts in Thailand's tourism economy. While some regions remain consistently popular, others face challenges or emerging trends, influenced by both domestic and international factors. The northeastern region, in particular, lags behind in terms of tourism revenue and activity, while coastal and central areas continue to thrive, especially in attracting foreign tourists.\n",
    "supporting": [
      "Take-home_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}