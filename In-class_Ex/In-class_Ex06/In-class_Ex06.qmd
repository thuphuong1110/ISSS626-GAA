---
title: "In-class Exercise 6: Emerging Hot Spot Analysis (EHSA)"
author: "Nguyen Bao Thu Phuong"
date: "30 September 2024" 
date-modified: "last-modified"
execute:
  eval: true
  echo: true
  message: false
  freeze: true
---

# Overview

Emerging Hot Spot Analysis (EHSA) is a spatial-temporal analysis method to reveal and describe how hot spot and cold spot areas evolve over time. The analysis consist of 4 main steps:

-   Build a space-time cube

-   Calculate Getis-Ord local Gi\* statistics for each bin using and FDR correction

-   Evaluate these hot and cold spot trends using Mann-Kendall trend test

-   Categorize each study area location by referring to the result trend z-score and hot spot z-score and p-value for each bin.

# Getting Started

## Install and Load R packages

`p_load()` of **pacman** package is used to install the necessary R packages.

```{r}
pacman::p_load(sf, sfdep, tmap, plotly, tidyverse)
```

Next we set the seed to ensure reproducibility of the result.

```{r}
set.seed(1234)
```

## The Data

The code chunk below use st_read() of sf package to import Hunan shapefile into R

```{r}
hunan = st_read(dsn = "data/geospatial",
                layer = "Hunan")
```

The attribute table is loaded in using `read_csv()`.

```{r}
GDPPC = read_csv("data/aspatial/Hunan_GDPPC.csv")
```

# Create a time-series cube

The space-time cube should be created on a fixed spatial entity region, only the attribute (the time) should change.

The code chunk below uses `spacetime()` of sfdep to create an spatio-temporal cube.

```{r}
GDPPC_st = spacetime(GDPPC, hunan,
                     .loc_col = "County",
                     .time_col = "Year")
```

The `.time_col` require the data in integer format (need to convert the date or month into integer or drop the time component if it's a datetime column).

Next `is_spacetime_cube()` of sfdep is used to verify if GDPPC_st is indeed an space-time cube object.

```{r}
is_spacetime_cube(GDPPC_st)
```

# Compute Gi\*

Next we comput the local Gi\* statistics.

## Derive the spatial weights

The code chunk below is used to identify neighbors and derive an inverse distance weights.

```{r}
GDPPC_nb = GDPPC_st |>
  activate("geometry") |>
  mutate(nb = include_self(
    st_contiguity(geometry)),
    wt = st_inverse_distance(nb,
                              geometry,
                              scale = 1,
                              alpha = 1),
                             .before = 1) |>
      set_nbs("nb") |>
      set_wts("wt")
```

In the above code chunk: The `activate()` function from the `dplyr` package is used to switch to the geometry context, while `mutate()` creates two new columns, `nb` and `wt`. Afterward, the data context is reactivated, and the `nb` and `wt` columns are copied to each time slice using `set_nbs()` and `set_wts()`. It's important not to change the row order after using these functions.

Note that this dataset now has neighbors and weights for each time-slice.

## Compute Gi\*

We use these new columns to manually calculate the local Gi\* for each location. This is done using `group_by` Year and `local_gstar_perm()` of **sfdep** package. Afterwards, `unnest()` is used to unnest `gi_star` column of the newly created gi_stars data.frame.

```{r}
gi_stars = GDPPC_nb |>
  group_by(Year) |>
  mutate(gi_star = local_gstar_perm(
    GDPPC, nb, wt)) |>
  tidyr::unnest(gi_star)
```

# Mann-Kendall Test

A monotonic series or function is one that only increases (or decreases) and never changes direction. So long as the function either stay flat or continues to increase, it is considered monotonic.

-   H0: No monotonic trend

-   H1: Monotonic trend is present

**Interpretation**

-   Reject the null-hypothesis if the p-value is smaller than alpha value

-   Tau ranges between -1 and 1 where:

    -   -1 is a perfectly decreasing series, and

    -   1 is a perfectly increasing series.

With these Gi\* measures we can evaluate each location for a trend using the Mann-Kendall test. The code chunk below evaluates Changsha county.

```{r}
cbg = gi_stars |>
  ungroup() |>
  filter(County == "Changsha") |>
  select(County, Year, gi_star)
```

## Interactive Mann-Kendall plot

Next we plot the result using ggplot2 functions.

```{r}
ggplot(data = cbg,
       aes(x = Year,
           y = gi_star)) +
  geom_line() +
  theme_light()
```

We can also create an interactive plot using `ggplotly()` of **plotly** package.

```{r}
p = ggplot(data = cbg,
           aes(x = Year,
               y = gi_star)) +
  geom_line() +
  theme_light()

ggplotly(p)
```

## Print Mann-Kendall test report

```{r}
cbg |>
  summarise(mk = list(
    unclass(
      Kendall::MannKendall(gi_star)))) |>
  tidyr::unnest_wider(mk)
```

In the above output, sl is the p-value. As the p-value is smaller than 0.05, we reject the null hypothesis and infer that a slight upward trend is present.

## Mann-Kendall test data.frame

We can replicate this for each location using `group_by()` of **dplyr** package.

```{r}
ehsa = gi_stars |>
  group_by(County) |>
  summarise(mk = list(
    unclass(
      Kendall::MannKendall(gi_star)))) |>
  tidyr::unnest_wider(mk)
head(ehsa)
```

We can also sort to show significant emerging hot/cold spots.

```{r}
emerging <- ehsa %>% 
  arrange(sl, abs(tau)) %>% 
  slice(1:10)
head(emerging)
```

# Perform Emerging Hotspot Analysis

Lastly, we perform EHSA using `emerging_hotspot_analysis()` of **sfdep** package. It takes a space-time object and the quoted name of the variable. The `k` argument is used to specify the number of time lags (set to 1 by default). Lastly, `nsim` defines number of simulations to be performed.

```{r}
ehsa = emerging_hotspot_analysis(
  x = GDPPC_st,
  .var = "GDPPC",
  k = 1, nsim = 99)
```

# Visualize the distribution of EHSA classes

The code chunk below uses ggplot2 functions to reveal the distribution of EHSA classes as a bar chart.

```{r}
ggplot(data = ehsa,
       aes(x = classification)) +
  geom_bar()
```

The figure above indicates that the "sporadic cold spots" class has the highest number of counties.

# Visualize EHSA

In this section, you explore how to visualise the geographic distribution EHSA classes. First we need to join both `hunan` and `ehsa` together using the code chunk below.

```{r}
hunan_ehsa = hunan |>
  left_join(ehsa,
            by = join_by(County == location))
```

Next tmap functions is used to plot a categorical choropleth map using the below code chunk.

```{r}
ehsa_sig = hunan_ehsa |>
  filter(p_value < 0.05)
tm_shape(hunan_ehsa) +
  tm_polygons() +
  tm_borders(alpha = 0.5) +
  tm_shape(ehsa_sig) +
  tm_fill("classification") +
  tm_borders(alpha = 0.4)
```

### Interpretation of EHSA classes

::: panel-tabset
#### Hot Spot Trends

| **Pattern Name**      | **Definition**                                                                                                                                                                                                                                                                                                           |
|:----------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| No pattern detected   | Does not fall into any of the hot or cold spot patterns defined below.                                                                                                                                                                                                                                                   |
| New Hot Spot          | A location that is a statistically significant hot spot for the final time step and has never been a statistically significant hot spot before.                                                                                                                                                                          |
| Consecutive Hot Spot  | A location with a single uninterrupted run of at least two statistically significant hot spot bins in the final time-step intervals. The location has never been a statistically significant hot spot prior to the final hot spot run and less than 90 percent of all bins are statistically significant hot spots.      |
| Intensifying Hot Spot | A location that has been a statistically significant hot spot for 90 percent of the time-step intervals, including the final time step. In addition, the intensity of clustering of high counts in each time step is increasing overall and that increase is statistically significant.                                  |
| Persistent Hot Spot   | A location that has been a statistically significant hot spot for 90 percent of the time-step intervals with no discernible trend in the intensity of clustering over time.                                                                                                                                              |
| Diminishing Hot Spot  | A location that has been a statistically significant hot spot for 90 percent of the time-step intervals, including the final time step. In addition, the intensity of clustering in each time step is decreasing overall and that decrease is statistically significant.                                                 |
| Sporadic Hot Spot     | A statistically significant hot spot for the final time-step interval with a history of also being an on-again and off-again hot spot. Less than 90 percent of the time-step intervals have been statistically significant hot spots and none of the time-step intervals have been statistically significant cold spots. |
| Oscillating Hot Spot  | A statistically significant hot spot for the final time-step interval that has a history of also being a statistically significant cold spot during a prior time step. Less than 90 percent of the time-step intervals have been statistically significant hot spots.                                                    |
| Historical Hot Spot   | The most recent time period is not hot, but at least 90 percent of the time-step intervals have been statistically significant hot spots.                                                                                                                                                                                |

#### Cold Spot Trends

| **Pattern Name**       | **Definition**                                                                                                                                                                                                                                                                                                             |
|:-----------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| New Cold Spot          | A location that is a statistically significant cold spot for the final time step and has never been a statistically significant cold spot before.                                                                                                                                                                          |
| Consecutive Cold Spot  | A location with a single uninterrupted run of at least two statistically significant cold spot bins in the final time-step intervals. The location has never been a statistically significant cold spot prior to the final cold spot run and less than 90 percent of all bins are statistically significant cold spots.    |
| Intensifying Cold Spot | A location that has been a statistically significant cold spot for 90 percent of the time-step intervals, including the final time step. In addition, the intensity of clustering of low counts in each time step is increasing overall and that increase is statistically significant.                                    |
| Persistent Cold Spot   | A location that has been a statistically significant cold spot for 90 percent of the time-step intervals with no discernible trend in the intensity of clustering of counts over time.                                                                                                                                     |
| Diminishing Cold Spot  | A location that has been a statistically significant cold spot for 90 percent of the time-step intervals, including the final time step. In addition, the intensity of clustering of low counts in each time step is decreasing overall and that decrease is statistically significant.                                    |
| Sporadic Cold Spot     | A statistically significant cold spot for the final time-step interval with a history of also being an on-again and off-again cold spot. Less than 90 percent of the time-step intervals have been statistically significant cold spots and none of the time-step intervals have been statistically significant hot spots. |
| Oscillating Cold Spot  | A statistically significant cold spot for the final time-step interval that has a history of also being a statistically significant hot spot during a prior time step. Less than 90 percent of the time-step intervals have been statistically significant cold spots.                                                     |
| Historical Cold Spot   | The most recent time period is not cold, but at least 90 percent of the time-step intervals have been statistically significant cold spots.                                                                                                                                                                                |
:::
